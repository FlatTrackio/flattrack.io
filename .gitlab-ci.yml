stages:
  - test
  - versionFind
  - build
  - buildTag

include:
  template: Dependency-Scanning.gitlab-ci.yml

test_e2e:
  image: golang:1.13.4-alpine3.10
  stage: test
  before_script:
    - apk add git
    - go get -v -d ./...
    - go install ./...
    - go get github.com/onsi/ginkgo/ginkgo
    - go get github.com/onsi/gomega/...
    - go run src/server/server.go &
  script:
    - $GOPATH/bin/ginkgo ./test

versionFind:
  image: node:12.10.0-alpine
  stage: versionFind
  script:
    - node -e "console.log(require('./package.json').version)" > .VERSION
  artifacts:
    paths:
      - .VERSION
  only:
    - tags

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug-v0.13.0
    entrypoint: [""]
  script:
    - if [ ! -z "$CI_COMMIT_TAG" ]; then KANIKO_EXTA_DESTINATION="--destination $CI_REGISTRY_IMAGE:$(cat .VERSION)"; fi
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --cache=false --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:latest $KANIKO_EXTA_DESTINATION
  dependencies:
    - test
  dependencies:
    - versionFind
