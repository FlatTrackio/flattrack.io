stages:
  - lint
  - test
  - build

include:
  template: Dependency-Scanning.gitlab-ci.yml

cache:
  key: shared-cache
  paths:
    - .npm
    - /go

variables:
  ARCH_DEFAULT: "amd64"
  APP_BUILD_VERSION: 0.0.0
  APP_BUILD_MODE: development
  POSTGRES_DB: flattrackio
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres

.kaniko-build-pre-script: &kaniko-build-pre-script |
  set -x
  mkdir -p /kaniko/.docker
  echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json

.kaniko-build-taggable-name: &kaniko-build-taggable-name |
  set -x
  COMMIT_HASH="???"
  BUILD_DATE="$(date -u +%Y-%m-%d_%I:%M:%S%p)"
  if [[ -z "$CI_COMMIT_TAG" ]]; then
    COMMIT_HASH="$CI_COMMIT_SHORT_SHA"
    PRINTABLE_COMMIT_HASH="-$COMMIT_HASH"
  fi
  if [[ ! "$CI_COMMIT_BRANCH" = "$CI_DEFAULT_BRANCH" ]] && [[ -z "$CI_COMMIT_TAG" ]]; then
    BRANCH_NAME="-$CI_COMMIT_BRANCH"
  fi
  ARCH_TAGGABLE_NAME="$(echo $ARCH | tr -d '/')"
  if [[ ! "$ARCH" = "$ARCH_DEFAULT" ]]; then
    PRINT_ARCH="-$ARCH_TAGGABLE_NAME"
  fi

.kaniko-pre-build-release-version: &kaniko-pre-build-release-version |
  if [[ ! -z "$CI_COMMIT_TAG" ]]; then
    export APP_BUILD_VERSION="$CI_COMMIT_TAG"
    export APP_BUILD_MODE=production
    export KANIKO_EXTRA_DESTINATION="--destination $CI_REGISTRY_IMAGE:$APP_BUILD_VERSION$PRINT_ARCH"
  fi

.kaniko-build: &kaniko-build |
  /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:latest$BRANCH_NAME$PRINT_ARCH $KANIKO_EXTRA_DESTINATION --build-arg GOARCH="$ARCH" --build-arg AppBuildVersion="$APP_BUILD_VERSION" --build-arg AppBuildDate="$BUILD_DATE" --build-arg AppBuildHash="$COMMIT_HASH" --build-arg AppBuildMode="$APP_BUILD_MODE"

build-amd64:
  stage: build
  image: gcr.io/kaniko-project/executor:debug-v1.0.0
  retry: 2
  variables:
    ARCH: "amd64"
  before_script:
    - *kaniko-build-pre-script
    - *kaniko-build-taggable-name
    - *kaniko-pre-build-release-version
  script:
    - *kaniko-build

test_backend_e2e:
  stage: test
  image: golang:1.13.10-alpine3.11
  variables:
    APP_DB_HOST: postgres
    CGO_ENABLED: "0"
  services:
    - postgres:12.2-alpine
  before_script:
    - apk add git gcc
    - go get github.com/onsi/ginkgo/ginkgo
    - go get github.com/onsi/gomega/...
    - go build -o flattrackio src/backend/main.go
    - ./flattrackio &
  script:
    - ginkgo -r --randomizeAllSpecs --randomizeSuites --failOnPending --cover --trace --progress test/backend/e2e
    - pkill flattrackio || true
    
lint_frontend:
  stage: lint
  image: node:12.10.0-alpine
  allow_failure: true
  before_script:
    - npm i
  script:
    - npm run lint

lint_backend:
  stage: lint
  image: golang:1.13.10-alpine3.11
  allow_failure: true
  before_script:
    - apk add git gcc
    - go get -u golang.org/x/lint/golint
  script:
    - golint -set_exit_status src/backend/... test/backend/e2e/...
