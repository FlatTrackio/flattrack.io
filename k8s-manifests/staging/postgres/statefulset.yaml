apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: flattrackio-site-home-staging
spec:
  replicas: 1
  serviceName: "postgres"
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      restartPolicy: Always
      containers:
      - name: postgres
        image: "docker.io/postgres:12.2-alpine"
        ports:
        - containerPort: 5432
        livenessProbe:
          exec:
            command:
            - "sh"
            - "-c"
            - "pg_isready"
            - "-U"
            - "$POSTGRES_USER"
          failureThreshold: 5
          periodSeconds: 10
          timeoutSeconds: 5
        volumeMounts:
          - mountPath: '/var/lib/postgres'
            name: flattrackio-db-pvc
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: postgres-configuration
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: postgres-configuration
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: flattrackio-postgres-secret
              key: postgres-password
        - name: PGDATABASE
          valueFrom:
            configMapKeyRef:
              name: postgres-configuration
              key: PGDATABASE
        - name: PGUSER
          valueFrom:
            configMapKeyRef:
              name: postgres-configuration
              key: PGUSER
      volumes:
        - name: flattrackio-db-pvc
          persistentVolumeClaim:
            claimName: flattrackio-db-pvc

